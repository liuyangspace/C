
排序

相关概念:
    排序,置换: 给定记录表(R1,R2,...,Rn),记录Ri的关键字为Ki,在关键字集合上存在以下关系:对任意两个关键字x、y,x=y或x<y或x>y,且<、>、=、
        满足传递性。排序是在关键字集合上寻找一个置换f(n),使Kf(i)<Kf(i+1),1<=i<n-1。
    稳定置换: 满足如下性值的置换: 令i、j是原记录表中Ri、Rj的位置，i<j且Ki<Kj,则排序之后Ri出现在Rj之前。

应用场景:
    加速查找与比较
    优化，图论，任务调度。

常用算法:
    内部排序(数据量较小,常驻内存): 插入排序，快速排序，归并排序，堆排序，基数排序
    外部排序(数据量较大,内存/磁盘):

比较排序性能分析:
    排序分析决策树(三条记录):
                          [1,2,3](K1<=K2)
                        Y /             \ N
            [1,2,3](K2<=K3)            [2,1,3](K1<=K3)
         Y /              \ N           Y /        \ N
    [1,2,3](1)   [1,3,2](K1<=K3)   [2,1,3](4)   [2,3,1](K2<=K3)
                Y /        \ N                   Y /        \ N
          [1,3,2](2)    [3,1,2](3)        [2,3,1](5)     [3,2,1](6)
    定理: n条记录决策树高度最少是 log2(n!)+1。
    证明: 由n个元素的排列知其决策树有n!个叶子，又高为k的树最多有2^(k-1)个叶子知 n条记录决策树高度最少是 log2(n!)+1。
    推论: 基于比较的排序算法，最差情形复杂度为Ω(n*log(n))。
    证明: log2(n!)+1 = log2( n*(n-1)*...*2*1 )+1 >= log2( (n*1)*((n-1)*2)*...*((n/2)^2) )+1
                    >= log2( (n/2)^(n/2) ) +1 = (n/2)*log2(n/2) +1 = Ω(n*log(n))。