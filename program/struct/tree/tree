
树

相关概念:
    树       :至少包含一个节点的有限集合。
    根       :或树根，树中特别指定的一个节点。
    子树     :根节点以外的节点划分成 n>=0 个不相交的集合 T1,T2 ... ,每个集合即为根的子树。
    度       :一个节点的子树数称为度。
    树度     :树中度数最大的节点的度数。
    k-度树   :度为k的树。
    叶子     :或叶节点，度为0的节点称为叶子。
    父亲     :指向本节点的节点。
    孩子     :本节点指向的节点。
    兄弟     :同一父亲的孩子间称为兄弟。
    祖先     :从根到该节点沿途经过的节点（或 父亲及父亲的祖先）称为该节点的祖先。
    层       :根是第一层(部分资料中将根视为第零层)，字节的层数是父节点的层数加一。
    树高     :或树深，深度，树中最大层节点的层数。

    二叉查找树:
        内部节点: 原始二叉树中节节点。
        外部节点,失败节点: 原始二叉树中节点指向的空孩子节点。
        扩展二叉树: 加入外部节点的二叉查找树。
        外部路径长度: 所有外部节点到根的路径之和，常记l。
        内部路径长度: 所有内部节点到根的路径之和，常记E。

特殊的树:
    二叉树: 或 2-度树，树度为2的树(每个节点最多有两个孩子)。
    满二叉树: 深度为k,节点数为 2^k -1的二叉树。
    完全二叉树: 二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h 层所有的结点都连续集中在最左边，这就是完全二叉树。
    线索二叉树: 若节点左孩子为空，则左孩子指向中序遍历的前驱节点，若右孩子为空，则右孩子指向中序遍历的后继节点，其余空孩子指向根。
    AVL树(平衡二叉树); 每个节点的左右两个子树树高差不超过1。
    大根树: 每个节点的关键字都不小于孩子节点关键字的完全二叉树。
    二叉查找树:
    选拔树:
        优胜树:每个节点的关键字，是两个孩子的较小值的完全二叉树。
        淘汰树:
    森林:n棵不相交树的集合。
    AVL: 空树是平衡树。T高度平衡当且仅当其左子树Tl和右子树Tr高度平衡，及|hl-hr|<=1，hl、hr为Tl、Tr的高度。
    平衡因字bf(T): 数T的bf(T)定义为hl-hr,hl、hr为左子树Tl、右子树Tr的高度，值域为[-1,0,1]
    红黑树: 具有以下性质的扩展二叉树为红黑树，1）根节点与外部节点为黑节点，2）从根至任意外部节点的路径上红节点不能连续出现且黑节点数目相同
            等同于以下性质，1）从内部节点指向外部节点的指针为黑指针，2）从根至任意外部节点的路径上红指针不能连续出现且黑指针数目相同
        秩: 红黑树中节点的秩为从该节点到外部节点路径上黑指针的数目（或黑节点的数目减一）
    Splay树:
        自底而上:
        自顶而下:
    多路查找树:
        m-路查找树:
            1) 空树是m-路查找树
            2) 根最多有m棵子树，节点结构为:
                n,A0,(E1,A1),(E2,A2),...,(En,An). 其中Ai,0<=i<=n<m指向子树(的指针), Ei,0<=i<=n<m是数据元素,Ei.K为Ei的关键字.
            3) Ei<Ei+1,1<=i<n
            4) 令E0.K=-∞,En+1.K=+∞, 令 Eai 为 子树Ai内任一节点，则 Ei.K < Eai,K < Ei+1.K.
            5) 根的所有子树 Ai,0<=i<=n, 均为m-路查找树.
        扩展m-路查找树: 加入外部节点的m-路查找树。
        B-树: m阶B-树具有以下性质的扩展m-路查找树,
            1) 空树是B-树
            2) 根节点至少有两个孩子
            3) 除根节点及外部节点，其余节点至少有 ⌈m/2⌉ 个孩子
            4) 所有外部节点都位于同一层
        B+-树: B+-树是具有以下性质的B-树,
            1) 内部节点 为 索引节点( 索引关键字，指针)
            2) 外部节点 为数据节点(含有多个数据信息), 且 所有数据节点 从左到右 构建成双向链表
            3) 对于内部节点:
                n,A0,(E1,A1),(E2,A2),...,(En,An). 其中Ai,0<=i<=n<m指向子树内的任一数据节点, Eai满足 Ei.K < Eai,K < Ei+1.K.

树的表示:
    顺序表示:
    链式表示:
        (A(B(E(K,L),F),C(G)))
    2-度树表示:

二叉树性质:
    1) 二叉树第i层的节点数最大是 2^(i-1),i>=1。
    2) 深度为k的二叉树的最大节点数为 2^k -1,k>=1。
    3) 非空二叉树T,令n0是叶节点个数，n2是度为2的节点个数，则有 n0=n2+1。
    4) 深度k>=0的满二叉树是节点个数为2^k -1的二叉树。
    5) 完全二叉树 从左到右 从上到下 以1开始编号，则对于给定的编号i,1<i<=n,n为节点数，有以下结论：
        (1) 当1<i<=n,i号节点的父节点位置是p(i)=[i/2];当i=1时，无父节点。
        (2) 当2i<=n,i号节点的左孩子节点位置是l(i)=2i;当2i>n时，i号节点无左孩子。
        (3) 当2i+1<=n,i号节点的右孩子节点位置是r(i)=2i;当2i+1>n时，i号节点无右孩子。
    6) 先序，后序 序列展示 节点父子关系，中序 序列 展示左右子树(兄弟)关系。
    7) 扩展二叉树中记 内部节点数为n，外部路径长度为E，内部路径长度为l，则有 E=l+2n。
    8) 红黑树性质:令h是红黑树的高度，n是内部节点数目，r是根的秩。则以下关系成立:
        (1) h<=2r
        (2) n>=(2^r)-1
        (3) h<=2log2(n+1)
    9) Splay树 便于 分裂
    10) B-树性质:
        (1)

二叉树操作:
    遍历: 记 V为访问节点，L遍历节点的左子树，R遍历节点的右子树
        分类: LVR(中序)、LRV(后序)、VLR(先序)、VRL、RVL、RLV
