
图:
    图G由两个集合V、E构成，V是节点的有限非空集合，E是节点的二元组集合，节点二元组称为边。

概念:
    点集,边集: V(G)和E(G)分别称为图G的节点集及边集。图也可表示为G=(V,E)。
    无向图: 无向图的边是无序二元组，即(u,v)和(v,u)表示同一条边。
    完全图: n个节点的无向图边数为 n(n-1)/2 (最大边数),则称之为完全图。
    有向图: 有向图的边是有序二元组，用<u,v>表示，u是边尾，v是边头。 n个节点的无向图最大边数为 n(n-1)。
    相邻,邻接节点: 对于边集E(G)的一条边(u,v),称u、v相邻，成边((u,v))的邻接节点为u，v。
    指向,发自: 对于有向图的边<u,v>，称u指向v,v发自u，<u,v>与u、v邻接。
    子图: 若图有图G,G',且V(G')⊆V(G),E(G')⊆E(G),则称G'为G的子图。
    环边: 图中由节点u到u的边称为环边。
    带环边图: 存在环边的图为带环边图。
    重复边图: 允许重复边出现的图，为重复边图。
    路径: 图G中的节点序列u、i1、i2、...、ik、v称为从u到v的路径，该路径有E(G)中的边(u,i1)、...、(ik,v)组成。
    有向路径: 有向图中的路径。
    路径长度: 路径中的边数。
    简单路径: 路径中除了起点和终点，其他节点都不相同。
    简单有向路径: 有向图中的简单路径。
    环路: 起点和终点相同的简单路径。
    简单有向环路: 有向图中的环路。
    节点连通: 无向图G中称两点u、v连通，当且仅当存在由u到v的路径。
    图连通: 无向图G连通，当且仅当G中不同节点两两连通。
    分量,连通分量: 无向图的最大连通子图。非连通的无向图有多个连通分量。
    树: 树是连通的无环图。
    强连通: 有向图G称为强连通，当且仅当V(G)中所有不同的两点 u、v,都同时存在 由u到v的有向路径 和 由v到u的有向路径。
    强连通分量: 有向图的最大强连通子图。
    度: 节点的度，是该节点邻接的边数。
    入度: 有向图G中指向某节点的边数。
    出度: 有向图G由某节点发出的边数。
    加权边: 有权值标识的边。
    网络,加权图: 边为加权边的图。
    深度优先生成树: 图深度优先遍历经过的节点和边构成的生成树。
    广度优先生成树: 图广度优先遍历经过的节点和边构成的生成树。
    关节点: 若删除图G中v及其邻接边，引起图联通分量增多，则v称为关节点。
    重连通图: 不含关节点的图称为重连通图。
    重连通分量: 最大重连同子图。
    深度优先标记: 图经深度优先遍历各节点的首次访问顺序称为该节点的深度优先标记，简称dfn(depth first number)。
    树边: 图经深度优先遍历，历经的边为树边。
    回边,非树边: 在图G的深度优先生成树中，若u是v的祖先，则边(u,v)称为回边。

    迁移闭包: 有向图G中任意节点i、j存在由i到j的路径且路径长度为正值。
    迁移闭包矩阵: 有向图G的自反迁移闭包矩阵A+为，若图中存在由i到j的路径且路径长度>0，则A+[i][j]=1，否则A+[i][j]=0。
    自反迁移闭包: 有向图G中任意节点i、j存在由i到j的路径且路径长度为非负值。
    自反迁移闭包矩阵: 有向图G的自反迁移闭包矩阵A*为，若图中存在由i到j的路径且路径长度>=0，则A*[i][j]=1，否则A*[i][j]=0。

    活动节点网络(AOV): 有向图G可称为活动节点网络，图中节点表示活动，边表示活动间优先关系。
        前驱,后继,直接前驱,直接后继: AOV网G中节点i称为节点j的前驱，当且仅当G中从i至j存在一条有向路径。
            节点i称为节点j的直接前驱，当且仅当G中从i至j存在边<i,j>。
            若节点i为节点j的前驱，则j称为i的后继。
            若节点i为节点j的直接前驱，则j称为i的直接后继。
        传递性: 关系·满足传递性，当且仅当对所有三元组i、j、k若满足i·j且j·k，则有i·k。
        非自反性: 关系·在集合S上满足非自反性，若所有S中的元素x，都没有x·x。
        偏序: 满足传递性和非自反性的优先关系称为偏序。
        拓扑序: 若AOV中i节点为j节点前驱，则满足i出现在j前的线性序列v0,v1...vn称为拓扑序。
    活动边网络(AOE)，活动，事件: 有向图G可称为活动节点网络，边表示活动(常记ai)，图中节点表示事件。
        关键路径，最短完成时间: 从起点至终点的最长路径为关键路径。关键路径上的时间和为最短完成时间。
        最早开始时间: 事件或活动i的最早开始时间是0到i的最长路径，事件常记为ee(i),活动常记为e(i)。
        最迟开始时间: 事件常记为el(i),活动常记为l(i), 若事件或活动i的开始时间低于这个时间，则项目的执行时间将延长。
        关键活动: 所有e(i)=l(i)的活动。
        关键度，迟滞度(slack): l(i)-e(i)的差值为活动的关键度度量。

性质:
    1) 最大边数: n个节点的无向图最大边数为 n(n-1)。n个节点的无向图最大边数为 n(n-1)/2。
    2) 边数: 图G的边数为V(G)中所有节点度数和的1/2。
    3）对图中 u、v,若在深度优先生成树中，u事v的祖先，则 dfn(u)<dfn(v)

存储:
    邻接矩阵:
        令图G=(V,E),有n>=1个节点，G的邻接矩阵是n*n的二维数组a。
        每个数组元素a[i][j]=1,当且仅当边(i,j) (有向图为<i,j>)在E(G)中。
        每个数组元素a[i][j]=0,当且仅当边(i,j) (有向图为<i,j>)不在E(G)中。
        无向图的邻接矩阵是对称矩阵。
    邻接表:
        邻接表存储是用n条单链表替代邻接矩阵的n行。第i条链表的每个节点都对应与i相邻的节点。
    邻接多重表:
        邻接表中第i条链表的每个节点记录与从i到该节点j,(i,j)边的相邻的两个节点标识i、j和与之对应的指向i、j的其他链表节点的指针。
    十字邻接表:

其他:
    欧拉回路: 从图中一个节点出发，经图中所有节点一次且仅一次，最后回到出发的节点（欧拉证明:当且仅当图中所有节的度都是偶数）。
    最小代价生成树(贪心法):
        Kruskal: 记图G有n个节点，从E(G)中以非递减代价的顺序筛选非环边n-1个，构成最小代价生成树。
            证明(迭代逼近法): 记有n个节点图G的最小生成树为U，Kruskal生成树为V,易证U、V均有边n-1个，记U,V中不同边k>0个，
                U中取不同边中最小代价边u,V中取加入U中可与u构成环的边v,由U为最小生成树易知u<=v,由v、u同环和Kruskal算法易知
                u>=v,则u、v代价相同。以此类推可证明U、V代价相同。
        Prim: 记图G有n个节点，任取一节点必在生成树中，加入V(G'),依次取V(G')中所有节点相邻边中代价最小且能构成树的的边，加入E(G')，
                依次类推取n-1条边或n个节点，生成最小代价生成树G'。
            证明: 记有n个节点图G的最小生成树为U，Prim生成树为V,记(a,b)为属于U且不属于V的最小边
        Sollin: 记图G所有结点n个构成森林, 每棵树选择一条权值尽可能小且不成环的边，若两棵树选择同一条边则任一树放弃选边且两条树合并。
                依次类推直至森林合并成一条树。
    最短路径(贪心法):
        ShortestPath(贪心法，非负边): 将源点加入已到达点集T，寻找与T相邻且便代价最小的非已到达点，记为u，计算T内
                所有点到达u的最短据离，取最小值为源点至v的最短路径。将u加入T。依次类推，直至将目标节点加入T.
            证明: 设已到达点集T外存在一节点v，使源点与v的最短据离 dist<T,v> + dist<v,u> < dist<T,u>,则必有 dist<T,v> < dist<T,u>,
                显然这与u距T最近的前提矛盾，则v点不存在。
        BellmanFord(动态规划，负边非负环): 图G有n个节点，则G中任意两点间的无环最短路径边数最多为n-1,记源点u与目标节点v的最短据离为
                dist[n-1]<u,v>,其中n-1为路径中的边数，记其余指向v的点集为T,则dist[n-1]<u,v>=min{dist[n-2]<u,v>(如果存在),dist[n-2]<u,T>+dist[1]<T,v>}.
                即:可从源点出发，遍历出历经一条边能到达的节点及其最短距离，则两条边能到达的节点及其最短距离为
                目标节点所有入边相邻节点的历经一边最短距离加上该边据离的最小值，由此类推遍历n-1条边可求出目标节点到其余各节点的无环最短路径。
